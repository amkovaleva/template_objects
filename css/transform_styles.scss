@import 'animation_examples.scss';

section div div {
  width: 100px;
  height: 50px;
  margin: 5px;
  padding: 10px;
  display: inline-block;
  vertical-align: middle;
  background: $light-color;
  color: $dark-color;
  border: 4px solid $dark-color;
  border-radius: 15px;
  font: $base-font;
  font-weight: bold;
  line-height: 50px;

  transition: all 0.5s ease;
}

section > div {
  display: inline-block;
  vertical-align: middle;
  background: $secondary-color;
  border: 1px solid $secondary-dark-color;
  margin: 5px;
  padding: 5px;

  &.size {
    width: 300px;
    height: 60px;
    position: relative;
    font: $base-font;
    color: $dark-color;
    font-weight: bold;

    &.clock {
      width: 100px;
      height: 100px;
      border-radius: 100px;
      font-size: 15px;
    }

    span {
      display: block;
      position: absolute;
      width: 2px;
      height: 2px;
      background: $dark-color;
      top: 70%;
      left: 0;

      &.center {
        width: 5px;
        height: 5px;
        left: 52px;
        top: 52px;
        border-radius: 5px;
      }

      &.arrow {
        width: 1px;
        height: 54px;
        left: 54px;
        top: 0;
        transform-origin: center bottom;
      }

      &.wheel {
        width: 30px;
        height: 30px;
        border-radius: 30px;
        top: 20px;
        color: $light-color;
        font-size: 30px;
        line-height: 34px;

        &.round {
          top: 40px;

          &.rotate {
            transform-origin: 56px 16px;

            span {
              position: static;
              display: inline-block;
              width: auto;
              height: auto;
              background: none;
            }
          }
        }
      }
    }

  }
}

#transform > div:hover {

  .double-up {
    transform: scale(2, 2);
  }

  .double-x {
    transform: scale(2, 1);
  }

  .double-y {
    transform: scale(1, 0.5);
  }

  .mirror {
    transform: scale(-1, -1);
  }

  .up-down {
    transform: scale(1, -1);
  }

  .reflect {
    transform: scale(1, -1) translateY(-58px);
  }

  .rotate {
    transform: rotate(360deg);
  }

  .skewX {
    transform: skewX(30deg);
  }

  .skewY {
    transform: skewY(30deg);
  }

  .skew {
    transform: skew(45deg, -45deg);
  }

  .t-left.t-top {
    transform: translate(-10px, -10px);
  }

  .t-right.t-bottom {
    transform: translate(10px, 10px);
  }

}

.animation {
  &.timing {
    .size {
      @include generate-delay(15, 3);
    }
  }

  :hover {
    &.shadow-delay {
      animation: shadow .5s 3 2s linear;
    }

    &.shadow {
      animation: shadow .5s 3 linear;
    }

    .rotate-center {
      animation: full-rotate 3s infinite linear normal;
    }

    .rotate-corner {
      animation: full-rotate 3s infinite linear normal;
      transform-origin: left top;
    }

    .rotate-corner1 {
      animation: full-rotate 3s infinite linear reverse;
      transform-origin: center bottom;
    }
  }

  .text-shadow {
    animation: text-shadow 1s infinite alternate linear;
  }

  @include class-name-by-prop('animation', '.rotate-', '', rotate 3s infinite linear, normal, reverse, alternate, alternate-reverse);
  @include class-name-by-prop('animation', '.timing-', ' span', to-right 3s infinite, linear, ease, ease-in, ease-out, ease-in-out);


  .timing-steps span {
    animation: to-right 3s infinite steps(15);
  }

  .timing-linear span {
    animation: to-right 3s infinite linear;
  }

  .timing-12-steps .arrow {
    animation: hours-rotate 6s infinite alternate steps(11);
  }

  .timing-jump-start .arrow {
    animation: hours-rotate 6s infinite alternate steps(11, jump-start);
  }

  .timing-jump-end .arrow {
    animation: hours-rotate 6s infinite alternate steps(11, jump-end);
  }

  .timing-jump-none .arrow {
    animation: hours-rotate 6s infinite alternate steps(11, jump-none);
  }

  .timing-jump-both .arrow {
    animation: hours-rotate 6s infinite alternate steps(11, jump-both);
  }

  .rainbow {
    @include rainbow-bg(0);
    animation: rainbow 2s infinite linear;
  }

  .rainbow2 {
    background: linear-gradient(to right, #FF0000, #FF8000, #FFFF00, #00FF00, #0080FF, #0000FF, #8000FF, #FF0000);
    animation: rainbow2 2s infinite linear;
  }

  .rainbow3 {
    background: #FF0000;
    animation: rainbow3 3s infinite linear;
  }

  .wheel {
    animation: wheel 5s 0s infinite alternate;

    &.square {
      animation: square-wheel 5s 0s infinite;
    }

    &.round {
      animation: round-wheel 5s 0s infinite;

      &.rotate {
        animation: rotate-wheel 5s 0s infinite linear;

        span {
          animation: rotate-wheel 1s 0s infinite linear;
        }
      }
    }

    &.path {
      animation: move-path 5s 0s infinite linear;

      &.round {
        offset-path: path('M15,15a40,40 0 1,0 80,0a40,40 0 1,0 -80,0');
      }

      &.square {
        offset-path: path("M 0 0 v 45 h 305 v -60 h -305 ");
      }

      &.ellipse {
        offset-path: path("M15,15a140,20 0 1,0 280,0a140,20 0 1,0 -280,0");
      }

    }
  }
}
